<?xml version="1.0"?>
<configuration>
  <configSections>
    <!-- USED FOR CUSTOM MACROS ONLY
        <section requirePermission="false" name="newtelligence.DasBlog.Macros" type="newtelligence.DasBlog.Web.Core.MacroSectionHandler, newtelligence.DasBlog.Web.Core" /> -->
    <section requirePermission="false" name="newtelligence.ControlImages" type="newtelligence.DasBlog.Web.Core.WebControls.ControlImageModuleSectionHandler, newtelligence.DasBlog.Web.Core"/>
    <section requirePermission="false" name="newtelligence.DasBlog.UrlMapper" type="newtelligence.DasBlog.Web.Core.UrlMapperModuleSectionHandler, newtelligence.DasBlog.Web.Core"/>
    <section requirePermission="false" name="newtelligence.DasBlog.TitleMapper" type="newtelligence.DasBlog.Web.Core.TitleMapperModuleSectionHandler, newtelligence.DasBlog.Web.Core"/>
    <section name="uri" type="System.Configuration.UriSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
    <section name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection" requirePermission="false" allowLocation="true"/>
    <!-- http compression handler section -->
    <sectionGroup name="blowery.web">
      <section requirePermission="false" name="httpCompress" type="blowery.Web.HttpCompress.SectionHandler, blowery.Web.HttpCompress"/>
    </sectionGroup>
  </configSections>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="FreeTextBox" publicKeyToken="5962a4e684a48b87" culture="neutral"/>
        <bindingRedirect oldVersion="3.0.0.0-3.3.0.22838" newVersion="3.3.0.22838"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <!-- USED FOR CUSTOM MACROS ONLY
    <newtelligence.DasBlog.Macros>
		<add macro="foo" type="FooMacroPlugin.FooMacros,FooMacroPlugin"/>
    </newtelligence.DasBlog.Macros> -->
  <newtelligence.ControlImages>
    <add type="newtelligence.DasBlog.Web.Core.WebControls.ShadowBox" name="shadowbox"/>
  </newtelligence.ControlImages>
  <newtelligence.DasBlog.UrlMapper>
    <add matchExpression="(?&lt;basedir&gt;.*?)/atom\.ashx" mapTo="{basedir}/SyndicationServiceExperimental.asmx/GetAtom?"/>
    <add matchExpression="(?&lt;basedir&gt;.*?)/rss\.as[hp]x" mapTo="{basedir}/SyndicationService.asmx/GetRss?"/>
    <!-- TSC: LINK rewriting -->
    <add matchExpression="LINKRW(?&lt;site&gt;.+).aspx\?(?&lt;param&gt;.+)=(?&lt;value&gt;.+)" mapTo="{site},{param},{value}.aspx"/>
    <!-- TSC: URL rewriting -->
    <!-- (?<basedir>.*?)/(?<site>.*?),(?<param>.*?),(?<value>.+)\.aspx -->
    <add matchExpression="(?&lt;basedir&gt;.*?)/(?&lt;site&gt;.*?),(?&lt;param&gt;.*?),(?&lt;value&gt;.+)\.aspx" mapTo="{basedir}/{site}.aspx?{param}={value}"/>
    <!-- .TEXT archive compatibility -->
    <!-- Translates
				FROM: /blog/archive/2004/07/27/194.aspx
                  TO: /blog/default.aspx?date=2004-07-27
        -->
    <add matchExpression="(?&lt;basedir&gt;.*?)/archive/(?&lt;year&gt;\d{4})/(?&lt;month&gt;\d{2})/(?&lt;day&gt;\d{2})/(?&lt;postid&gt;\d+)\.aspx" mapTo="{basedir}/default.aspx?date={year}-{month}-{day}"/>
    <!-- .TEXT archive compatibility -->
    <!-- ALTERNATIVE: Translates
				FROM: /blog/archive/2004/07/27/194.aspx
                  TO: /blog/permalink.aspx?guid=194
        -->
    <!--
        <add matchExpression="(?&lt;basedir&gt;.*?)/archive/(?&lt;year&gt;\d{4})/(?&lt;month&gt;\d{2})/(?&lt;day&gt;\d{2})/(?&lt;postid&gt;\d+)\.aspx"
            mapTo="{basedir}/permalink.aspx?guid={postid}" />
-->
  </newtelligence.DasBlog.UrlMapper>

  <!-- files not participating in the titlemapper module-->
  <newtelligence.DasBlog.TitleMapper>
    <exclusions>
      <clear />
      <add path="CaptchaImage.aspx" />
      <add path="aggbug.ashx" />
      <add path="blogger.aspx" />
      <add path="pingback.aspx" />
      <add path="get_aspx_ver.asp" />
    </exclusions>
  </newtelligence.DasBlog.TitleMapper>

  <!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
	     which is necessary for OpenID urls with unicode characters in the domain/host name. 
	     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
  <uri>
    <idn enabled="All"/>
    <iriParsing enabled="true"/>
  </uri>

  <dotNetOpenAuth>
    <openid>
      <relyingParty>
        <behaviors>
          <!-- Talk Sreg or AX automatically depending on the Provider the user is logging in or commenting with. -->
          <add type="DotNetOpenAuth.OpenId.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth" />
        </behaviors>
      </relyingParty>
    </openid>
  </dotNetOpenAuth>

  <!-- config section for my http module -->
  <blowery.web>
    <!-- Here's an example on how to change the algorithm or compression level
		<compressionModule preferredAlgorithm="deflate|gzip" compressionLevel="high|normal|low"/>
		so, to use deflate by default, and high compression, you would use the following line
		-->
    <httpCompress preferredAlgorithm="gzip" compressionLevel="high">
      <excludedMimeTypes>
        <add type="image/jpeg"/>
        <add type="image/gif"/>
      </excludedMimeTypes>
      <excludedPaths>
        <add path="WebResource.axd"/>
        <add path="ebResource.axd"/>
      </excludedPaths>
    </httpCompress>
  </blowery.web>
  <system.diagnostics>
    <assert assertuienabled="false"/>
    <switches>
      <add name="OpenID" value="4"/>
    </switches>
    <trace autoflush="true" indentsize="4">
      <listeners>
        <add name="fileLogger" type="System.Diagnostics.TextWriterTraceListener"
             initializeData="openidConsumerTrace.txt" traceOutputOptions="None"/>
      </listeners>
    </trace>
  </system.diagnostics>
  <system.web>
    <!-- <trust level="Medium" originUrl=".*" /> -->
    <!--    <trust level="Full" originUrl="" />  -->

    <!--  level="[Full|High|Medium|Low|Minimal]" -->
    <!-- <trust level="High" originUrl=""/>  -->
    <!--  DYNAMIC DEBUG COMPILATION
          Set compilation debug="true" to enable ASPX debugging.  Otherwise, setting this value to
          false will improve runtime performance of this application.
          Set compilation debug="true" to insert debugging symbols (.pdb information)
          into the compiled page. Because this creates a larger file that executes
          more slowly, you should set this value to true only when debugging and to
          false at all other times. For more information, refer to the documentation about
          debugging ASP .NET files.
    -->
    <compilation defaultLanguage="c#" debug="false"/>
    <!--  CUSTOM ERROR MESSAGES
          Set customError mode values to control the display of user-friendly
          error messages to users instead of error details (including a stack trace):

          "On" Always display custom (friendly) messages
          "Off" Always display detailed ASP.NET error information.
          "RemoteOnly" Display custom (friendly) messages only to users not running
          on the local Web server. This setting is recommended for security purposes, so
          that you do not display application detail information to remote clients.
    -->
    <customErrors mode="Off"/>
    <!-- ***IMPORTANT*** If you are using ASP.NET 2.0 to host dasBlog
			                     you must uncomment the httpCookies section below,
			                     as dasBlog was written for ASP.NET 1.1 and will
			                     automatically add the HttpOnly flag to cookies automatically -->
    <!-- <httpCookies httpOnlyCookies="false"/> -->
    <authentication mode="Forms">
      <!-- NOTE: If you want to run MULTIPLE dasBlogs on the SAME Domain Name
			     include the path in each blog's Web.Config like path="/dasblog1" and path="/yoursite"
			     as appropriate. -->
      <forms name=".DASBLOGAUTH" protection="All" timeout="60" path="/" cookieless="UseCookies" />
    </authentication>
    <!--
        If your ISP/Hoster supports ASP.NET impersonation, they are likley
        setting this to true in their machine.config. You should not set it to true
        unless you know that dasBlog will have the correct permissions

        <identity impersonate="false" />
        -->
<!-- required for .net 4.0 -->
    <!-- httpRuntime useFullyQualifiedRedirectUrl="true" requestValidationMode="2.0"/ -->
<!-- required for .net 2.0 -->
    <httpRuntime useFullyQualifiedRedirectUrl="true" />
    <!--  APPLICATION-LEVEL TRACE LOGGING
          Application-level tracing enables trace log output for every page within an application.
          Set trace enabled="true" to enable application trace logging.  If pageOutput="true", the
          trace information will be displayed at the bottom of each page.  Otherwise, you can view the
          application trace log by browsing the "trace.axd" page from your web application
          root.
    -->
    <trace enabled="false" writeToDiagnosticsTrace="true" requestLimit="1000" pageOutput="false" traceMode="SortByTime" localOnly="false"/>
    <!--  SESSION STATE SETTINGS
          By default ASP .NET uses cookies to identify which requests belong to a particular session.
          If cookies are not available, a session can be tracked by adding a session identifier to the URL.
          To disable cookies, set sessionState cookieless="true".
    -->
    <sessionState mode="InProc" stateConnectionString="tcpip=127.0.0.1:42424" sqlConnectionString="data source=127.0.0.1;user id=sa;password=" cookieless="false" timeout="20"/>
    <!--  GLOBALIZATION
          This section sets the globalization settings of the application.
    -->
    <globalization requestEncoding="utf-8" responseEncoding="utf-8"/>
    <pages validateRequest="true"/>
    <httpHandlers>
      <add verb="GET" path="CaptchaImage.aspx" type="WebControlCaptcha.CaptchaImageHandler, WebControlCaptcha"/>
      <add verb="*" path="aggbug.ashx" type="newtelligence.DasBlog.Web.Services.AggregatorBugHandler, newtelligence.DasBlog.Web.Services"/>
      <add verb="*" path="ct.ashx" type="newtelligence.DasBlog.Web.Services.ClickThroughHandler, newtelligence.DasBlog.Web.Services"/>
      <add verb="*" path="cptrk.ashx" type="newtelligence.DasBlog.Web.Services.CrosspostReferrerHandler, newtelligence.DasBlog.Web.Services"/>
      <add verb="*" path="deleteItem.ashx" type="newtelligence.DasBlog.Web.Services.DeleteItemHandler, newtelligence.DasBlog.Web.Services"/>
      <add verb="*" path="approveItem.ashx" type="newtelligence.DasBlog.Web.Services.ApproveItemHandler, newtelligence.DasBlog.Web.Services"/>
      <add verb="*" path="cdf.ashx" type="newtelligence.DasBlog.Web.Services.CdfHandler, newtelligence.DasBlog.Web.Services"/>
      <add verb="*" path="blogger.aspx" type="newtelligence.DasBlog.Web.Services.BloggerAPI, newtelligence.DasBlog.Web.Services"/>
      <add verb="*" path="pingback.aspx" type="newtelligence.DasBlog.Web.Services.PingbackAPI, newtelligence.DasBlog.Web.Services"/>
      <add verb="*" path="trackback.aspx" type="newtelligence.DasBlog.Web.Services.TrackbackHandler, newtelligence.DasBlog.Web.Services"/>
      <add verb="*" path="autoSaveEntry.ashx" type="newtelligence.DasBlog.Web.Services.AutoSaveEntryHandler, newtelligence.DasBlog.Web.Services"/>
      <add verb="*" path="microsummary.ashx" type="newtelligence.DasBlog.Web.Services.MicrosummaryHandler, newtelligence.DasBlog.Web.Services"/>
      <add verb="GET" path="googleSitemap.ashx" type="newtelligence.DasBlog.Web.Services.GoogleSitemapHandler, newtelligence.DasBlog.Web.Services"/>
      <add verb="GET" path="timeline.ashx" type="newtelligence.DasBlog.Web.Services.TimelineHandler, newtelligence.DasBlog.Web.Services"/>
      <add verb="*" path="*.blogtemplate" type="System.Web.HttpForbiddenHandler"/>
    </httpHandlers>
    <webServices>
      <protocols>
        <add name="HttpGet"/>
      </protocols>
    </webServices>
    <httpModules>
      <add type="newtelligence.DasBlog.Web.Core.UrlMapperModule, newtelligence.DasBlog.Web.Core" name="UrlMapperModule"/>
      <add type="newtelligence.DasBlog.Web.Core.TitleMapperModule, newtelligence.DasBlog.Web.Core" name="TitleMapperModule"/>
      <add type="newtelligence.DasBlog.Web.Core.ProfileMapperModule, newtelligence.DasBlog.Web.Core" name="ProfileMapperModule"/>
      <add type="newtelligence.DasBlog.Web.Core.WebControls.ControlImageModule, newtelligence.DasBlog.Web.Core" name="ControlImageModule"/>
      <add type="blowery.Web.HttpCompress.HttpModule, blowery.web.HttpCompress" name="CompressionModule"/>
      <add type="newtelligence.DasBlog.Web.Core.IPBlackList, newtelligence.DasBlog.Web.Core" name="IPBlackList"/>
    </httpModules>
    <!-- <xhtmlConformance mode="Legacy"/> -->
  </system.web>
  <system.webServer>
    <defaultDocument enabled="true">
      <files>
        <remove value="default.aspx" />
        <add value="default.aspx" />
      </files>
    </defaultDocument>
    <directoryBrowse enabled="false" />

    <handlers>
      <add name="*.blogtemplate_*" path="*.blogtemplate" verb="*" type="System.Web.HttpForbiddenHandler" preCondition="integratedMode,runtimeVersionv2.0" />
      <add name="timeline.ashx_GET" path="timeline.ashx" verb="GET" type="newtelligence.DasBlog.Web.Services.TimelineHandler, newtelligence.DasBlog.Web.Services" preCondition="integratedMode,runtimeVersionv2.0" />
      <add name="googleSitemap.ashx_GET" path="googleSitemap.ashx" verb="GET" type="newtelligence.DasBlog.Web.Services.GoogleSitemapHandler, newtelligence.DasBlog.Web.Services" preCondition="integratedMode,runtimeVersionv2.0" />
      <add name="microsummary.ashx_*" path="microsummary.ashx" verb="*" type="newtelligence.DasBlog.Web.Services.MicrosummaryHandler, newtelligence.DasBlog.Web.Services" preCondition="integratedMode,runtimeVersionv2.0" />
      <add name="autoSaveEntry.ashx_*" path="autoSaveEntry.ashx" verb="*" type="newtelligence.DasBlog.Web.Services.AutoSaveEntryHandler, newtelligence.DasBlog.Web.Services" preCondition="integratedMode,runtimeVersionv2.0" />
      <add name="trackback.aspx_*" path="trackback.aspx" verb="*" type="newtelligence.DasBlog.Web.Services.TrackbackHandler, newtelligence.DasBlog.Web.Services" preCondition="integratedMode,runtimeVersionv2.0" />
      <add name="pingback.aspx_*" path="pingback.aspx" verb="*" type="newtelligence.DasBlog.Web.Services.PingbackAPI, newtelligence.DasBlog.Web.Services" preCondition="integratedMode,runtimeVersionv2.0" />
      <add name="blogger.aspx_*" path="blogger.aspx" verb="*" type="newtelligence.DasBlog.Web.Services.BloggerAPI, newtelligence.DasBlog.Web.Services" preCondition="integratedMode,runtimeVersionv2.0" />
      <add name="cdf.ashx_*" path="cdf.ashx" verb="*" type="newtelligence.DasBlog.Web.Services.CdfHandler, newtelligence.DasBlog.Web.Services" preCondition="integratedMode,runtimeVersionv2.0" />
      <add name="approveItem.ashx_*" path="approveItem.ashx" verb="*" type="newtelligence.DasBlog.Web.Services.ApproveItemHandler, newtelligence.DasBlog.Web.Services" preCondition="integratedMode,runtimeVersionv2.0" />
      <add name="deleteItem.ashx_*" path="deleteItem.ashx" verb="*" type="newtelligence.DasBlog.Web.Services.DeleteItemHandler, newtelligence.DasBlog.Web.Services" preCondition="integratedMode,runtimeVersionv2.0" />
      <add name="cptrk.ashx_*" path="cptrk.ashx" verb="*" type="newtelligence.DasBlog.Web.Services.CrosspostReferrerHandler, newtelligence.DasBlog.Web.Services" preCondition="integratedMode,runtimeVersionv2.0" />
      <add name="ct.ashx_*" path="ct.ashx" verb="*" type="newtelligence.DasBlog.Web.Services.ClickThroughHandler, newtelligence.DasBlog.Web.Services" preCondition="integratedMode,runtimeVersionv2.0" />
      <add name="aggbug.ashx_*" path="aggbug.ashx" verb="*" type="newtelligence.DasBlog.Web.Services.AggregatorBugHandler, newtelligence.DasBlog.Web.Services" preCondition="integratedMode,runtimeVersionv2.0" />
      <add name="CaptchaImage.aspx_GET" path="CaptchaImage.aspx" verb="GET" type="WebControlCaptcha.CaptchaImageHandler, WebControlCaptcha" preCondition="integratedMode,runtimeVersionv2.0" />
    </handlers>
    <modules>
      <add name="UrlMapperModule" type="newtelligence.DasBlog.Web.Core.UrlMapperModule, newtelligence.DasBlog.Web.Core" preCondition="managedHandler" />
      <add name="TitleMapperModule" type="newtelligence.DasBlog.Web.Core.TitleMapperModule, newtelligence.DasBlog.Web.Core" preCondition="managedHandler" />
      <add name="ProfileMapperModule" type="newtelligence.DasBlog.Web.Core.ProfileMapperModule, newtelligence.DasBlog.Web.Core" preCondition="managedHandler" />
      <add name="ControlImageModule" type="newtelligence.DasBlog.Web.Core.WebControls.ControlImageModule, newtelligence.DasBlog.Web.Core" preCondition="managedHandler" />
      <add name="CompressionModule" type="blowery.Web.HttpCompress.HttpModule, blowery.web.HttpCompress" preCondition="managedHandler" />
      <add name="IPBlackList" type="newtelligence.DasBlog.Web.Core.IPBlackList, newtelligence.DasBlog.Web.Core" preCondition="managedHandler" />
    </modules>
    <validation validateIntegratedModeConfiguration="false" />
  </system.webServer>
</configuration>
